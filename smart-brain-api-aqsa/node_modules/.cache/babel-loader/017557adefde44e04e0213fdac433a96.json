{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aqsamemon/Desktop/facerecognitionbrain/src/App.js\";\nimport React from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '4a7fae411c9e4c95ae675a362744922c'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aqsamemon/Desktop/facerecognitionbrain/src/App.js"],"names":["React","Particles","Clarifai","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","Component","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '4a7fae411c9e4c95ae675a362744922c'\n});\n\n \n const particlesOptions = {\n                particles: {\n                number: {\n                  value: 30,\n                  density: {\n                    enable: true,\n                    value_area: 800\n                  }\n           }\n      }\n }\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n }\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputimage');\n  const width = Number(image.width);\n  const height = Number(image.height);\n   return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box});\n}\n\n onInputChange = (event) => {\n    this.setState({input: event.target.value});\n }\n\n onButtonSubmit = () => {\n  this.setState({imageUrl: this.state.input})\n     app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n      this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n    }\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <Particles className='particles'\n              params={particlesOptions}\n            />\n        <Navigation />\n         <Logo />\n         <Rank />\n       <ImageLinkForm onInputChange={this.onInputChange}\n        onButtonSubmit={this.onButtonSubmit}\n        />\n       <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}